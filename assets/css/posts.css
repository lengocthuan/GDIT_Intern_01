td,
th {
    border: 3px solid #2d302e;
    text-align: center;
    padding: 8px;
}

.fa-file-alt {
    color: #0ea3e8;
}

.fa-edit {
    color: #0f8c2a;
}

.fa-globe {
    color: #db7d09;
}

.newPost {
    /*margin: 100px 150px 100px 80px;*/
    margin: right;
}

.hide {
    border: 3px solid #fff;
}

.center {
    text-align: center !important;
}

.create {
    padding: 0;
    margin: 0 !important;
}

td>form {
    margin-bottom: 0 !important;
}

input {
    background-color: #4CAF50 !important;
    border: none;
    color: white;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    width: 100%;
    font-size: 16px;
}

h2 {
    text-align: center;
}

.toggle {
    --uiToggleSize: var(--toggleSize, 20px);
    --uiToggleIndent: var(--toggleIndent, .4em);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, #000);
    --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
    --uiToggleBgColor: var(--toggleBgColor, #fff);
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
    --uiToggleArrowColor: var(--toggleArrowColor, #fff);

    display: inline-block;
    position: relative;
}

.toggle__input {
    position: absolute;
    left: -99999px;
}

.toggle__label {
    display: inline-flex;
    cursor: pointer;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
}

.toggle__label:before,
.toggle__label:after {
    content: "";
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);

    position: absolute;
    left: 0;
    top: 0;
}

.toggle__label:before {
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
    z-index: 2;
}

.toggle__input:disabled~.toggle__label:before {
    border-color: var(--uiToggleDisabledColor);
}

.toggle__input:focus~.toggle__label:before {
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled):checked:focus~.toggle__label:after {
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
}

.toggle__input:not(:disabled)~.toggle__label:after {
    background-color: var(--uiToggleColor);
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label:after {
    opacity: 1;
}

.toggle__text {
    margin-top: auto;
    margin-bottom: auto;
}

/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
*/

.toggle__text:before {
    content: "";
    box-sizing: border-box;
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);

    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--uiToggleArrowColor);

    position: absolute;
    top: .5428em;
    left: .2em;
    z-index: 3;

    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
}

.toggle__input:not(:disabled):checked~.toggle__label .toggle__text:before {
    width: .5em;
    height: .25em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
    will-change: width, height;
    transition: width .1s ease-out .2s, height .2s ease-out;
}


.toggle__label:before,
.toggle__label:after {
    border-radius: 2px;
}

.toggle__input:not(:disabled)~.toggle__label:before,
.toggle__input:not(:disabled)~.toggle__label:after {
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
}

.toggle__input:not(:disabled)~.toggle__label:before {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle__input:not(:disabled)~.toggle__label:after {
    transform: rotateY(90deg);
}

.toggle__input:not(:disabled):checked~.toggle__label:before {
    transform: rotateY(-90deg);
    transition-delay: 0s;
}

.toggle__input:not(:disabled):checked~.toggle__label:after {
    transform: rotateY(0deg);
    transition-delay: .2s;
}

.toggle__text:before {
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label .toggle__text:before {
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
}

.toggle {
    --toggleColor: #0e7a90b0;
    --toggleBgColor: #0e7a90b0;
    --toggleSize: 50px;
}

.page {
    margin: auto;
    padding-left: 10px;
    padding-right: 10px;
    order: 1;
}

.page__toggle {
    font-size: 28px;
    font-weight: 700;
    color: #fff;
}

.page__toggle:nth-child(n+2) {
    margin-top: 50px;
}

.r-link {
    --uirLinkDisplay: var(--rLinkDisplay, inline-flex);
    --uirLinkTextColor: var(--rLinkTextColor);
    --uirLinkTextDecoration: var(--rLinkTextDecoration, none);
    display: var(--uirLinkDisplay) !important;
    color: var(--uirLinkTextColor) !important;
    text-decoration: var(--uirLinkTextDecoration) !important;
}

.patreon {
    padding-top: 15px;
    padding-bottom: 20px;
    background-color: #efefef;
}

.patreon__container {
    padding-left: 15px;
    padding-right: 15px;
    max-width: 768px;
    margin-left: auto;
    margin-right: auto;
}

.patreon__msg {
    display: block;
}

.patreon__link {
    --rLinkTextColor: #fff;
    padding: 10px 30px;
    text-transform: uppercase;
    font-size: 14px;
    font-weight: 700;
    background-color: #ff6262;
    border-radius: 25px;
    justify-content: center;
}

table {
    position: relative;
    left: 50%;
    transform: translateX(-50%);
    margin-bottom: 50px;
}

.createpost {
    display: flex;
    justify-content: center;
    margin-bottom: 2px;
}

ul {
    list-style: none;
    display: flex;
    justify-content: center;
    margin: 50px;
}

ul:after {
    clear: both;
}

ul li {
    background: #dddddd;
    width: 35px;
    height: 30px;
    line-height: 30px;
    float: left;
    text-align: center;
    margin-right: 1px;
}

a {
    text-decoration: none;
}

ul li.active {
    color: white;
    background: blue;
}

.active a {
    color: white;
}